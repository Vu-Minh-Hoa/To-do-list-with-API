{"version":3,"sources":["redux/todoSlice.js","components/AddTodoForm.js","components/TodoItem.js","components/TodoList.js","components/TotalCompleteItems.js","App.js","redux/store.js","index.js"],"names":["getTodosAsync","createAsyncThunk","a","fetch","response","ok","json","todos","addTodoAsync","payload","method","headers","body","JSON","stringify","title","todo","toggleCompleteAsync","id","completed","deleteTodoAsync","deleteCompletedTodoAsync","todoSlice","createSlice","name","initialState","reducers","addToDo","state","action","newToDo","nanoid","push","toggleComplete","index","findIndex","deleteToDo","filter","deleteCompletedToDo","extraReducers","fulfilled","console","log","actions","AddTodoForm","ref","useRef","useState","value","setValue","dispatch","useDispatch","onSubmit","e","preventDefault","current","focus","className","type","placeholder","onChange","target","TodoItem","checked","onClick","TodoList","useSelector","useEffect","map","TotalCompleteItems","completedTodos","length","App","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.f9707288.chunk.js","sourcesContent":["import { createSlice, nanoid, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const getTodosAsync = createAsyncThunk(\r\n    \"todos/getTodosAsync\",\r\n    async () => {\r\n        const response = await fetch(\"http://localhost:7000/todos\");\r\n        if (response.ok) {\r\n            const todos = await response.json();\r\n            return { todos };\r\n        }\r\n    }\r\n);\r\n\r\nexport const addTodoAsync = createAsyncThunk(\r\n    \"todos/addTodoAsync\",\r\n    async (payload) => {\r\n        const response = await fetch(\"http://localhost:7000/todos\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ title: payload.title }),\r\n        });\r\n\r\n        if (response.ok) {\r\n            const todo = await response.json();\r\n            return { todo };\r\n        }\r\n    }\r\n);\r\n\r\nexport const toggleCompleteAsync = createAsyncThunk(\r\n    \"todos/completeTodoAsync\",\r\n    async (payload) => {\r\n        const response = await fetch(\r\n            `http://localhost:7000/todos/${payload.id}`,\r\n            {\r\n                method: \"PATCH\",\r\n                headers: {\r\n                    \"Content-type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ completed: payload.completed }),\r\n            }\r\n        );\r\n        if (response.ok) {\r\n            const todo = await response.json();\r\n            return { id: todo.id, completed: todo.completed };\r\n        }\r\n    }\r\n);\r\n\r\nexport const deleteTodoAsync = createAsyncThunk(\r\n    \"todos/deleteTodoAsync\",\r\n    async (payload) => {\r\n        const response = await fetch(\r\n            `http://localhost:7000/todos/${payload.id}`,\r\n            {\r\n                method: \"DELETE\",\r\n            }\r\n        );\r\n        if (response.ok) {\r\n            const todo = await response.json();\r\n            return { id: todo.id, completed: todo.completed };\r\n        }\r\n    }\r\n);\r\n\r\nexport const deleteCompletedTodoAsync = createAsyncThunk(\r\n    \"todos/deleteCompletedTodoAsync\",\r\n    async () => {\r\n        const response = await fetch(`http://localhost:7000/todos/`, {\r\n            method: \"PATCH\",\r\n        });\r\n        if (response.ok) {\r\n            const todo = await response.json();\r\n            return { id: todo.id, completed: todo.completed };\r\n        }\r\n    }\r\n);\r\n\r\nconst todoSlice = createSlice({\r\n    name: \"todos\",\r\n    initialState: [\r\n        { id: 1, title: \"todo1\", completed: false },\r\n        { id: 2, title: \"todo2\", completed: false },\r\n        { id: 3, title: \"todo3\", completed: true },\r\n    ],\r\n    reducers: {\r\n        addToDo: (state, action) => {\r\n            const newToDo = {\r\n                id: nanoid(),\r\n                title: action.payload.title,\r\n                completed: false,\r\n            };\r\n            state.push(newToDo);\r\n        },\r\n        toggleComplete: (state, action) => {\r\n            const index = state.findIndex((todo) => {\r\n                return todo.id === action.payload.id;\r\n            });\r\n            state[index].completed = action.payload.completed;\r\n        },\r\n        deleteToDo: (state, action) => {\r\n            return state.filter((todo) => {\r\n                return todo.id !== action.payload.id;\r\n            });\r\n        },\r\n        deleteCompletedToDo: (state, action) => {\r\n            return state.filter((todo) => {\r\n                return todo.completed === false;\r\n            });\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getTodosAsync.fulfilled]: (state, action) => {\r\n            return action.payload.todos;\r\n        },\r\n        [addTodoAsync.fulfilled]: (state, action) => {\r\n            state.push(action.payload.todo);\r\n        },\r\n        [toggleCompleteAsync.fulfilled]: (state, action) => {\r\n            const index = state.findIndex(\r\n                (todo) => todo.id === action.payload.id\r\n            );\r\n            state[index].completed = action.payload.completed;\r\n        },\r\n        [deleteTodoAsync.fulfilled]: (state, action) => {\r\n            console.log(state);\r\n            state.filter((todo) => {\r\n                return todo.id !== action.payload.id;\r\n            });\r\n            console.log(state);\r\n        },\r\n        [deleteCompletedTodoAsync.fulfilled]: (state, action) => {\r\n            state.filter((todo) => {\r\n                return todo.completed === false;\r\n            });\r\n            console.log(state);\r\n        },\r\n    },\r\n});\r\n\r\nexport const { addToDo, toggleComplete, deleteToDo, deleteCompletedToDo } =\r\n    todoSlice.actions;\r\nexport default todoSlice.reducer;\r\n","import { useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToDo, addTodoAsync } from \"../redux/todoSlice\";\r\n\r\nconst AddTodoForm = () => {\r\n    const ref = useRef();\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            addTodoAsync({\r\n                title: value,\r\n            })\r\n        );\r\n        dispatch(\r\n            addToDo({\r\n                title: value,\r\n            })\r\n        );\r\n        setValue(\"\");\r\n        ref.current.focus();\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"form-inline mt-3 mb-3\">\r\n            <label className=\"sr-only\">Name</label>\r\n            <input\r\n                ref={ref}\r\n                type=\"text\"\r\n                className=\"form-control mb-2 mr-sm-2\"\r\n                placeholder=\"Add todo...\"\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n            ></input>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary mb-2\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddTodoForm;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    toggleCompleteAsync,\r\n    toggleComplete,\r\n    deleteTodoAsync,\r\n    deleteToDo,\r\n} from \"../redux/todoSlice\";\r\n\r\nconst TodoItem = ({ id, title, completed }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleCompleteClick = () => {\r\n        dispatch(toggleCompleteAsync({ id: id, completed: !completed }));\r\n        dispatch(toggleComplete({ id: id, completed: !completed }));\r\n    };\r\n\r\n    const handleDeleteToDo = () => {\r\n        dispatch(deleteTodoAsync({ id: id }));\r\n        dispatch(deleteToDo({ id: id }));\r\n    };\r\n\r\n    return (\r\n        <li\r\n            className={`list-group-item ${\r\n                completed && \"list-group-item-success\"\r\n            }`}\r\n        >\r\n            <div className=\"d-flex justify-content-between\">\r\n                <span className=\"d-flex align-items-center\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        className=\"mr-3\"\r\n                        checked={completed}\r\n                        onClick={handleCompleteClick}\r\n                    ></input>\r\n                    {title}\r\n                </span>\r\n                <button className=\"btn btn-danger\" onClick={handleDeleteToDo}>\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useEffect } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getTodosAsync } from \"../redux/todoSlice\";\r\n\r\nconst TodoList = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const todos = useSelector((state) => {\r\n        return state.todos;\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch(getTodosAsync());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {todos.map((todo) => (\r\n                <TodoItem\r\n                    id={todo.id}\r\n                    key={todo.id}\r\n                    title={todo.title}\r\n                    completed={todo.completed}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    deleteCompletedToDo,\r\n    deleteCompletedTodoAsync,\r\n} from \"../redux/todoSlice\";\r\n\r\nconst TotalCompleteItems = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const completedTodos = useSelector((state) =>\r\n        state.todos.filter((todo) => {\r\n            return todo.completed === true;\r\n        })\r\n    );\r\n\r\n    const handleDeleteAll = () => {\r\n        dispatch(deleteCompletedTodoAsync());\r\n        dispatch(deleteCompletedToDo());\r\n    };\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <h4 className=\"mt-3\">\r\n                Total Completed Task: {completedTodos.length}\r\n            </h4>\r\n            <button\r\n                className=\"btn btn-danger delete-all-btn\"\r\n                onClick={handleDeleteAll}\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TotalCompleteItems;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AddTodoForm from './components/AddTodoForm';\r\nimport TodoList from './components/TodoList';\r\nimport TotalCompleteItems from './components/TotalCompleteItems';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className='container bg-white p-4 mt-5'>\r\n\t\t\t<h1>My Todo List</h1>\r\n\t\t\t<AddTodoForm />\r\n\t\t\t<TodoList />\r\n\t\t\t<TotalCompleteItems />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport todoReducer from \"./todoSlice\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        todos: todoReducer,\r\n    },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}